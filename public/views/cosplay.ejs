<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cosplay Haven - Discover Amazing Cosplay Creations</title>
    <style>
        :root {
            --primary: #ff4d7d;
            --secondary: #ff85a2;
            --accent: #ffb6c1;
            --dark: #2a2a3c;
            --darker: #1a1a2e;
            --light: #f8f8ff;
            --text-light: #ffffff;
            --text-lighter: #f5f5f5;
            --bg-dark: #0f0f1a;
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--bg-dark);
            color: var(--text-light);
            line-height: 1.6;
            min-height: 100vh;
            background-image: 
                radial-gradient(circle at 10% 20%, rgba(255, 77, 125, 0.1) 0%, transparent 20%),
                radial-gradient(circle at 90% 80%, rgba(255, 182, 193, 0.1) 0%, transparent 20%);
        }
        
        .container {
            width: 100%;
            max-width: 1400px;
            margin: 0 auto;
            padding: 1rem;
        }
        
        header {
            text-align: center;
            padding: 2rem 0;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border-radius: 0 0 20px 20px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 20px rgba(255, 77, 125, 0.3);
            position: relative;
            overflow: hidden;
        }
        
        header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            transform: rotate(30deg);
            pointer-events: none;
        }
        
        h1 {
            color: var(--text-lighter);
            font-size: 2.8rem;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            position: relative;
            z-index: 1;
            font-weight: 700;
        }
        
        .tagline {
            font-size: 1.2rem;
            color: var(--text-lighter);
            margin-bottom: 1.5rem;
            opacity: 0.9;
            position: relative;
            z-index: 1;
        }
        
        .search-container {
            display: flex;
            justify-content: center;
            margin: 0 auto;
            max-width: 600px;
            position: relative;
            z-index: 1;
        }
        
        #searchInput {
            flex: 1;
            padding: 0.9rem 1.2rem;
            border: none;
            border-radius: 30px 0 0 30px;
            font-size: 1rem;
            background-color: rgba(255, 255, 255, 0.15);
            color: var(--text-lighter);
            outline: none;
            transition: var(--transition);
            backdrop-filter: blur(5px);
        }
        
        #searchInput:focus {
            background-color: rgba(255, 255, 255, 0.2);
            box-shadow: 0 0 0 3px var(--accent);
        }
        
        #searchInput::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }
        
        #searchButton {
            padding: 0 1.8rem;
            background-color: var(--darker);
            color: white;
            border: none;
            border-radius: 0 30px 30px 0;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        #searchButton:hover {
            background-color: var(--dark);
            transform: translateX(2px);
        }
        
        #resultsContainer {
            padding: 1rem;
        }
        
        .results-title {
            text-align: center;
            margin-bottom: 1.5rem;
            color: var(--text-lighter);
            font-size: 1.8rem;
            position: relative;
            padding-bottom: 0.5rem;
        }
        
        .results-title::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: linear-gradient(to right, var(--primary), var(--accent));
            border-radius: 3px;
        }
        
        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 1.8rem;
            padding: 0.5rem;
        }
        
        .cosplay-item {
            background-color: var(--darker);
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
            transition: var(--transition);
            position: relative;
            cursor: pointer;
        }
        
        .cosplay-item:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.4);
        }
        
        .cosplay-item::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(to right, var(--primary), var(--accent));
            z-index: 2;
        }
        
        .cosplay-item img {
            width: 100%;
            height: 300px;
            object-fit: cover;
            display: block;
            transition: var(--transition);
        }
        
        .cosplay-info {
            padding: 1rem;
            background: linear-gradient(to bottom, var(--darker), var(--dark));
        }
        
        .cosplay-info h3 {
            margin: 0;
            font-size: 1.1rem;
            color: var(--text-lighter);
            word-wrap: break-word;
            white-space: normal;
        }
        
        .cosplay-character {
            font-size: 0.9rem;
            color: var(--accent);
            margin-top: 0.3rem;
        }
        
        .cosplay-cosplayer {
            font-size: 0.9rem;
            color: var(--secondary);
            margin-top: 0.3rem;
        }
        
        .cosplay-source {
            font-size: 0.8rem;
            color: rgba(255, 255, 255, 0.6);
            margin-top: 0.5rem;
        }
        
        .loading {
            text-align: center;
            padding: 3rem;
            font-size: 1.2rem;
            color: var(--text-light);
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1rem;
        }
        
        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        /* Gallery View Styles */
        .gallery-view {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: var(--bg-dark);
            z-index: 1000;
            overflow-y: auto;
            display: none;
            padding: 2rem;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .gallery-view.active {
            display: block;
            opacity: 1;
        }
        
        .gallery-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .gallery-title {
            font-size: 1.8rem;
            color: var(--text-lighter);
            max-width: 80%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .close-gallery {
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            font-size: 1.2rem;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: var(--transition);
        }
        
        .close-gallery:hover {
            transform: scale(1.1);
            background-color: var(--secondary);
        }
        
        .gallery-content {
            display: grid;
            grid-template-columns: 1fr;
            gap: 2rem;
        }
        
        .gallery-images {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }
        
        .gallery-images img {
            width: 100%;
            height: 250px;
            object-fit: cover;
            border-radius: 8px;
            cursor: pointer;
            transition: var(--transition);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .gallery-images img:hover {
            transform: scale(1.02);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }
        
        .gallery-info {
            background-color: var(--darker);
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        }
        
        .gallery-info h2 {
            color: var(--text-lighter);
            margin-bottom: 1rem;
            font-size: 1.5rem;
            border-bottom: 2px solid var(--primary);
            padding-bottom: 0.5rem;
        }
        
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .info-item {
            margin-bottom: 0.5rem;
        }
        
        .info-label {
            font-size: 0.9rem;
            color: var(--accent);
            margin-bottom: 0.2rem;
            font-weight: 500;
        }
        
        .info-value {
            font-size: 1rem;
            color: var(--text-light);
            word-break: break-word;
        }
        
        .download-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-top: 2rem;
        }
        
        .download-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.8rem 1.5rem;
            background: rgba(255, 77, 125, 0.2);
            color: var(--text-light);
            border: 1px solid var(--primary);
            border-radius: 30px;
            font-size: 1rem;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
        }
        
        .download-btn:hover {
            background: rgba(255, 77, 125, 0.4);
            transform: translateY(-2px);
        }
        
        .password-indicator {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            margin-top: 1.5rem;
            padding: 0.8rem 1.5rem;
            background: rgba(0, 0, 0, 0.3);
            color: var(--accent);
            border-radius: 30px;
            font-size: 1rem;
            border: 1px dashed var(--accent);
        }
        
        /* Fullscreen overlay for images */
        .fullscreen-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1001;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
        
        .fullscreen-overlay.active {
            opacity: 1;
            visibility: visible;
        }
        
        .fullscreen-image-container {
            position: relative;
            max-width: 90%;
            max-height: 90%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .fullscreen-image {
            max-width: 100%;
            max-height: 90vh;
            object-fit: contain;
            border-radius: 8px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.6);
        }
        
        .close-fullscreen {
            position: absolute;
            top: 20px;
            right: 20px;
            background-color: rgba(255, 77, 125, 0.8);
            color: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            font-size: 1.2rem;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: var(--transition);
            z-index: 2;
        }
        
        .close-fullscreen:hover {
            background-color: var(--primary);
            transform: scale(1.1);
        }
        
        /* Navigation arrows */
        .nav-arrow {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background-color: rgba(255, 77, 125, 0.8);
            color: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            font-size: 1.2rem;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: var(--transition);
            z-index: 2;
        }
        
        .nav-arrow:hover {
            background-color: var(--primary);
            transform: translateY(-50%) scale(1.1);
        }
        
        .nav-arrow.prev {
            left: 20px;
        }
        
        .nav-arrow.next {
            right: 20px;
        }
        
        .image-counter {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            z-index: 2;
        }
        
        /* Gallery navigation controls */
        .gallery-nav {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 2rem;
        }
        
        .gallery-nav-btn {
            padding: 0.8rem 1.5rem;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 30px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .gallery-nav-btn:disabled {
            background-color: var(--dark);
            cursor: not-allowed;
            opacity: 0.6;
        }
        
        .gallery-nav-btn:hover:not(:disabled) {
            background-color: var(--secondary);
            transform: translateY(-2px);
        }
        
        /* Responsive adjustments */
        @media (max-width: 992px) {
            h1 {
                font-size: 2.4rem;
            }
            
            .gallery {
                grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
                gap: 1.5rem;
            }
            
            .cosplay-item img {
                height: 260px;
            }
            
            .gallery-images {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            }
            
            .gallery-images img {
                height: 200px;
            }
        }
        
        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }
            
            .tagline {
                font-size: 1rem;
            }
            
            .gallery {
                grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
                gap: 1.2rem;
            }
            
            .cosplay-item img {
                height: 220px;
            }
            
            .gallery-view {
                padding: 1rem;
            }
            
            .gallery-images {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }
            
            .gallery-images img {
                height: 150px;
            }
            
            .info-grid {
                grid-template-columns: 1fr;
            }
            
            .close-fullscreen, .nav-arrow, .close-gallery {
                width: 35px;
                height: 35px;
                font-size: 1rem;
            }
            
            .gallery-nav {
                flex-direction: column;
                align-items: center;
            }
            
            .gallery-nav-btn {
                width: 100%;
                justify-content: center;
            }
        }
        
        @media (max-width: 576px) {
            h1 {
                font-size: 1.8rem;
            }
            
            .search-container {
                flex-direction: column;
                gap: 0.8rem;
            }
            
            #searchInput {
                border-radius: 30px;
                padding: 0.8rem 1.2rem;
            }
            
            #searchButton {
                border-radius: 30px;
                padding: 0.8rem;
                justify-content: center;
            }
            
            .gallery {
                grid-template-columns: 1fr;
            }
            
            .results-title {
                font-size: 1.5rem;
            }
            
            .gallery-images {
                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            }
            
            .gallery-images img {
                height: 120px;
            }
            
            .close-fullscreen, .nav-arrow, .close-gallery {
                width: 30px;
                height: 30px;
                font-size: 0.9rem;
            }
            
            .download-buttons {
                gap: 0.5rem;
            }
            
            .download-btn {
                padding: 0.5rem 1rem;
                font-size: 0.8rem;
            }
            
            .gallery-info {
                padding: 1.5rem;
            }
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <header>
        <div class="container">
            <h1>Cosplay Haven</h1>
            <p class="tagline">Discover Amazing Cosplay Creations</p>
            <div class="search-container">
                <input type="text" id="searchInput" placeholder="Search for characters, series, or cosplayers...">
                <button id="searchButton"><i class="fas fa-search"></i> Search</button>
            </div>
        </div>
    </header>
    
    <div class="container">
        <div id="resultsContainer">
            <div class="loading">
                <div class="loading-spinner"></div>
                Loading featured cosplay...
            </div>
        </div>
    </div>

    <!-- Gallery View -->
    <div class="gallery-view" id="galleryView">
        <div class="container">
            <div class="gallery-header">
                <h2 class="gallery-title" id="galleryTitle">Gallery</h2>
                <button class="close-gallery" id="closeGallery"><i class="fas fa-times"></i></button>
            </div>
            
            <div class="gallery-content">
                <div class="gallery-images" id="galleryImages"></div>
                
                <div class="gallery-info" id="galleryInfo">
                    <h2 id="galleryInfoTitle">Cosplay Information</h2>
                    <div class="info-grid" id="infoGrid"></div>
                    
                    <div class="download-buttons" id="downloadButtons"></div>
                    
                    <div class="password-indicator" id="passwordIndicator" style="display: none;">
                        <i class="fas fa-lock"></i> <span id="passwordText">Password: </span>
                    </div>
                    
                    <div class="gallery-nav">
                        <button class="gallery-nav-btn" id="prevAlbumBtn" disabled>
                            <i class="fas fa-chevron-left"></i> Previous Album
                        </button>
                        <button class="gallery-nav-btn" id="nextAlbumBtn" disabled>
                            Next Album <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Fullscreen overlay for images -->
    <div class="fullscreen-overlay" id="fullscreenOverlay">
        <button class="close-fullscreen" id="closeFullscreen"><i class="fas fa-times"></i></button>
        <button class="nav-arrow prev" id="prevImage"><i class="fas fa-chevron-left"></i></button>
        <div class="fullscreen-image-container">
            <img class="fullscreen-image" id="fullscreenImage" src="" alt="Fullscreen cosplay">
            <div class="image-counter" id="imageCounter"></div>
        </div>
        <button class="nav-arrow next" id="nextImage"><i class="fas fa-chevron-right"></i></button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const searchButton = document.getElementById('searchButton');
            const resultsContainer = document.getElementById('resultsContainer');
            const galleryView = document.getElementById('galleryView');
            const galleryImages = document.getElementById('galleryImages');
            const galleryInfo = document.getElementById('galleryInfo');
            const galleryTitle = document.getElementById('galleryTitle');
            const infoGrid = document.getElementById('infoGrid');
            const downloadButtons = document.getElementById('downloadButtons');
            const passwordIndicator = document.getElementById('passwordIndicator');
            const passwordText = document.getElementById('passwordText');
            const closeGallery = document.getElementById('closeGallery');
            
            const fullscreenOverlay = document.getElementById('fullscreenOverlay');
            const fullscreenImage = document.getElementById('fullscreenImage');
            const closeFullscreen = document.getElementById('closeFullscreen');
            const prevImageBtn = document.getElementById('prevImage');
            const nextImageBtn = document.getElementById('nextImage');
            const imageCounter = document.getElementById('imageCounter');
            
            const prevAlbumBtn = document.getElementById('prevAlbumBtn');
            const nextAlbumBtn = document.getElementById('nextAlbumBtn');
            
            let currentImageIndex = 0;
            let currentResults = [];
            let currentAlbumImages = [];
            let currentGalleryItem = null;
            let currentGalleryIndex = 0;
            let globalPassword = '';
            
            // Load random cosplay on page load
            fetchCosplayData('');
            
            // Search when button is clicked
            searchButton.addEventListener('click', function() {
                const searchTerm = searchInput.value.trim();
                fetchCosplayData(searchTerm);
            });
            
            // Also search when Enter key is pressed
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    const searchTerm = searchInput.value.trim();
                    fetchCosplayData(searchTerm);
                }
            });
            
            // Close gallery view
            closeGallery.addEventListener('click', function() {
                closeGalleryView();
            });
            
            // Close fullscreen when clicking overlay (but not the image)
            fullscreenOverlay.addEventListener('click', function(e) {
                if (e.target === fullscreenOverlay) {
                    closeFullscreenView();
                }
            });
            
            // Close fullscreen with escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    if (fullscreenOverlay.classList.contains('active')) {
                        closeFullscreenView();
                    } else if (galleryView.classList.contains('active')) {
                        closeGalleryView();
                    }
                }
            });
            
            // Navigation with arrow keys
            document.addEventListener('keydown', function(e) {
                if (fullscreenOverlay.classList.contains('active')) {
                    if (e.key === 'ArrowLeft') {
                        showPrevImage();
                    } else if (e.key === 'ArrowRight') {
                        showNextImage();
                    }
                }
            });
            
            // Handle back button on mobile
            window.addEventListener('popstate', function(event) {
                if (galleryView.classList.contains('active')) {
                    closeGalleryView();
                    event.preventDefault();
                }
            });
            
            closeFullscreen.addEventListener('click', closeFullscreenView);
            prevImageBtn.addEventListener('click', showPrevImage);
            nextImageBtn.addEventListener('click', showNextImage);
            
            prevAlbumBtn.addEventListener('click', showPrevAlbum);
            nextAlbumBtn.addEventListener('click', showNextAlbum);
            
            function fetchCosplayData(searchTerm) {
                resultsContainer.innerHTML = `
                    <div class="loading">
                        <div class="loading-spinner"></div>
                        ${searchTerm ? `Searching for "${searchTerm}"...` : 'Loading featured cosplay...'}
                    </div>`;
                
                const apiUrl = `https://haji-mix.up.railway.app/api/cosplaytele?search=${encodeURIComponent(searchTerm)}&stream=false`;
                
                fetch(apiUrl)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.status) {
                            globalPassword = data.password || '';
                            displayResults(data.result, searchTerm);
                        } else {
                            throw new Error(data.error || 'No results found');
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching data:', error);
                        resultsContainer.innerHTML = `
                            <div class="loading">
                                <i class="fas fa-exclamation-triangle" style="font-size: 2rem; color: var(--primary); margin-bottom: 1rem;"></i>
                                ${error.message || 'Error loading data. Please try again later.'}
                            </div>`;
                    });
            }
            
            function displayResults(results, searchTerm) {
                if (!results || results.length === 0) {
                    resultsContainer.innerHTML = `
                        <div class="loading">
                            <i class="far fa-frown" style="font-size: 2rem; color: var(--accent); margin-bottom: 1rem;"></i>
                            No results found for "${searchTerm}". Try a different search term.
                        </div>`;
                    return;
                }
                
                resultsContainer.innerHTML = '';
                
                const title = searchTerm 
                    ? `<h2 class="results-title">Results for "${searchTerm}"</h2>`
                    : `<h2 class="results-title">Featured Cosplay</h2>`;
                
                resultsContainer.insertAdjacentHTML('beforeend', title);
                
                const gallery = document.createElement('div');
                gallery.className = 'gallery';
                resultsContainer.appendChild(gallery);
                
                // Store current results for gallery view
                currentResults = results;
                
                // Display all results
                results.forEach((result, resultIndex) => {
                    // Skip if no images
                    if (!result.images || result.images.length === 0) return;
                    
                    const cosplayItem = document.createElement('div');
                    cosplayItem.className = 'cosplay-item';
                    
                    // Only show the first image as thumbnail
                    const firstImage = result.images[0];
                    const img = document.createElement('img');
                    img.src = firstImage;
                    img.alt = result.title || 'Cosplay image';
                    img.loading = 'lazy';
                    
                    const info = document.createElement('div');
                    info.className = 'cosplay-info';
                    
                    info.innerHTML = `
                        <h3>${result.title || 'Cosplay Image'}</h3>
                        ${result.character ? `<div class="cosplay-character">Character: ${result.character}</div>` : ''}
                        ${result.cosplayer ? `<div class="cosplay-cosplayer">Cosplayer: ${result.cosplayer}</div>` : ''}
                        ${result.appearsIn ? `<div class="cosplay-source">Series: ${result.appearsIn}</div>` : ''}
                        ${result.images.length > 1 ? `<div class="cosplay-source" style="margin-top: 0.8rem;"><i class="fas fa-images"></i> ${result.images.length} images in set</div>` : ''}
                    `;
                    
                    // Add click event to open gallery view
                    cosplayItem.addEventListener('click', () => {
                        openGalleryView(result, resultIndex);
                    });
                    
                    cosplayItem.appendChild(img);
                    cosplayItem.appendChild(info);
                    gallery.appendChild(cosplayItem);
                });
            }
            
            function openGalleryView(result, resultIndex) {
                currentGalleryItem = result;
                currentGalleryIndex = resultIndex;
                currentAlbumImages = result.images || [];
                galleryTitle.textContent = result.title || 'Cosplay Gallery';
                
                // Update navigation buttons
                updateAlbumNavButtons();
                
                // Clear previous content
                galleryImages.innerHTML = '';
                infoGrid.innerHTML = '';
                downloadButtons.innerHTML = '';
                
                // Display all images
                currentAlbumImages.forEach((imageUrl, index) => {
                    const img = document.createElement('img');
                    img.src = imageUrl;
                    img.alt = `Image ${index + 1}`;
                    img.addEventListener('click', () => {
                        openFullscreenView(index);
                    });
                    galleryImages.appendChild(img);
                });
                
                // Display information
                const infoItems = [
                    { label: 'Character', value: result.character },
                    { label: 'Cosplayer', value: result.cosplayer },
                    { label: 'Series', value: result.appearsIn },
                    { label: 'Images', value: result.images.length }
                ];
                
                infoItems.forEach(item => {
                    if (item.value) {
                        const infoItem = document.createElement('div');
                        infoItem.className = 'info-item';
                        infoItem.innerHTML = `
                            <div class="info-label">${item.label}</div>
                            <div class="info-value">${item.value}</div>
                        `;
                        infoGrid.appendChild(infoItem);
                    }
                });
                
                // Create download buttons if downloadLinks exist
                if (result.downloadLinks && result.downloadLinks.length > 0) {
                    result.downloadLinks.forEach((link, index) => {
                        const downloadBtn = document.createElement('a');
                        downloadBtn.href = link;
                        downloadBtn.className = 'download-btn';
                        downloadBtn.target = '_blank';
                        downloadBtn.innerHTML = `
                            <i class="fas fa-download"></i> Server ${index + 1}
                        `;
                        downloadButtons.appendChild(downloadBtn);
                    });
                }
                
                // Add password from globalPassword (response.data.password)
                if (globalPassword) {
                    passwordIndicator.style.display = 'inline-flex';
                    passwordText.textContent = `Archive Password: ${globalPassword}`;
                } else {
                    passwordIndicator.style.display = 'none';
                }
                
                // Show gallery view
                galleryView.classList.add('active');
                document.body.style.overflow = 'hidden';
                
                // Add to history for back button support
                history.pushState({ galleryOpen: true }, '');
            }
            
            function closeGalleryView() {
                galleryView.classList.remove('active');
                document.body.style.overflow = '';
                
                // Remove history state if we added it
                if (history.state && history.state.galleryOpen) {
                    history.back();
                }
            }
            
            function openFullscreenView(index) {
                currentImageIndex = index;
                fullscreenImage.src = currentAlbumImages[index];
                fullscreenImage.alt = `Cosplay image ${index + 1} of ${currentAlbumImages.length}`;
                imageCounter.textContent = `${index + 1} / ${currentAlbumImages.length}`;
                fullscreenOverlay.classList.add('active');
                document.body.style.overflow = 'hidden';
            }
            
            function closeFullscreenView() {
                fullscreenOverlay.classList.remove('active');
                document.body.style.overflow = galleryView.classList.contains('active') ? 'hidden' : '';
            }
            
            function showPrevImage() {
                if (currentAlbumImages.length === 0) return;
                currentImageIndex = (currentImageIndex - 1 + currentAlbumImages.length) % currentAlbumImages.length;
                fullscreenImage.src = currentAlbumImages[currentImageIndex];
                fullscreenImage.alt = `Cosplay image ${currentImageIndex + 1} of ${currentAlbumImages.length}`;
                imageCounter.textContent = `${currentImageIndex + 1} / ${currentAlbumImages.length}`;
            }
            
            function showNextImage() {
                if (currentAlbumImages.length === 0) return;
                currentImageIndex = (currentImageIndex + 1) % currentAlbumImages.length;
                fullscreenImage.src = currentAlbumImages[currentImageIndex];
                fullscreenImage.alt = `Cosplay image ${currentImageIndex + 1} of ${currentAlbumImages.length}`;
                imageCounter.textContent = `${currentImageIndex + 1} / ${currentAlbumImages.length}`;
            }
            
            function showPrevAlbum() {
                if (currentGalleryIndex > 0) {
                    openGalleryView(currentResults[currentGalleryIndex - 1], currentGalleryIndex - 1);
                }
            }
            
            function showNextAlbum() {
                if (currentGalleryIndex < currentResults.length - 1) {
                    openGalleryView(currentResults[currentGalleryIndex + 1], currentGalleryIndex + 1);
                }
            }
            
            function updateAlbumNavButtons() {
                prevAlbumBtn.disabled = currentGalleryIndex <= 0;
                nextAlbumBtn.disabled = currentGalleryIndex >= currentResults.length - 1;
            }
        });
    </script>
</body>
</html>